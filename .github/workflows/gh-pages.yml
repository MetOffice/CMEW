# (C) Crown Copyright 2025, Met Office.
# The LICENSE.md file contains full licensing details.

name: Build the documentation, then deploy to GitHub Pages

on:
  # Triggers the workflow on push (commit to main)
  push:
    branches: ["main"]

  # Allows this workflow to be started manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the
# run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production
# deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build documentation with Sphinx
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      # Check out the repository under $GITHUB_WORKSPACE, then run build there
      - name: Checkout CMEW repository
        uses: actions/checkout@v4

      - name: Setup GitHub Pages
        uses: actions/configure-pages@v5

      - name: Create environment
        run: |
          conda update conda
          conda create --name cmew --file .github/workflows/cmew-env/cmew-env.lock
          eval "$(conda shell.bash hook)"
          conda activate cmew

      - name: Build documentation using Sphinx
        run: |
          eval "$(conda shell.bash hook)"
          conda activate cmew
          cd doc
          make html

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: doc/build/html

  # Deploy built documentation to GitHub Pages
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
